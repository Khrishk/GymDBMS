
import java.awt.print.PrinterException;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedHashSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.*;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.awt.Font;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.table.DefaultTableModel;
import java.awt.Component;
import java.awt.print.PrinterException;
import javax.swing.JFileChooser;
import javax.swing.table.TableModel;
import java.awt.BorderLayout;
import java.awt.Graphics2D;
import java.awt.Shape;
import java.io.FileOutputStream;
 
public class searchcustomer extends javax.swing.JFrame {

    /** Creates new form searchcustomer */
    public searchcustomer() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        t1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jt1 = new javax.swing.JTable();
        r1 = new javax.swing.JRadioButton();
        r2 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        cb1 = new javax.swing.JComboBox();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 0, 0));
        jPanel1.setForeground(new java.awt.Color(0, 204, 102));

        jPanel2.setBackground(new java.awt.Color(153, 0, 0));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("OLD SPORT 01 COLLEGE NCV", 0, 48)); // NOI18N
        jLabel3.setText("SEARCH CUSTOMER DETAILS");

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setText("BACK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jButton2)
                .addGap(100, 100, 100)
                .addComponent(jLabel3)
                .addContainerGap(368, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 33, Short.MAX_VALUE)
                .addComponent(jLabel3))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        t1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jt1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ADMISSION NUMBER", "NAME", "PH.NUMBER", "DATE OF JOINING", "BLOOD GROUP", "HEIGHT", "WEIGHT", "BMI", "HEALTH ISSUE", "TYPE", "PACKAGE", "ADDRESS"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jt1);

        r1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        r1.setText("MALE");

        r2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        r2.setText("FEMALE");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("SELECT GENDER");

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("SEARCH");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        cb1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cb1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ADMISSION NUMBER", "CUSTOMER NAME", "PHONE NUMBER", "DATE OF JOINING", "ADDRESS" }));

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton3.setText("CLEAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton5.setText("PRINT");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton6.setText("EXPORT TO EXCEL");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1227, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(295, 295, 295)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(cb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(113, 113, 113)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(r1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(r2))
                                    .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(478, 478, 478)
                                .addComponent(jButton1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(336, 336, 336)
                .addComponent(jButton3)
                .addGap(48, 48, 48)
                .addComponent(jButton5)
                .addGap(40, 40, 40)
                .addComponent(jButton6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(r1)
                    .addComponent(r2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jButton5)
                            .addComponent(jButton6)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 60, Short.MAX_VALUE)))
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void exportTable(JTable table, File file) throws IOException {
        TableModel model = table.getModel();
        FileWriter out = new FileWriter(file);
        for(int i=0; i < model.getColumnCount(); i++) {
            out.write(model.getColumnName(i) + "\t");
            }
        out.write("\n");

            for(int i=0; i< model.getRowCount(); i++) {
        for(int j=0; j < model.getColumnCount(); j++) {
            out.write(model.getValueAt(i,j).toString()+"\t");
            }
            out.write("\n");
        }

        out.close();
        System.out.println("write out to: " + file);
}
    
    

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DefaultTableModel m=(DefaultTableModel)jt1.getModel();
        String c=(String)cb1.getSelectedItem();
        if(c.equals("ADMISSION NUMBER")) {
            if(r1.isSelected()) {
                int a=Integer.parseInt(t1.getText());
                try{
                    Class.forName("java.sql.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/everyouth","root","Khrish2003");
                    Statement s=con.createStatement();
                    String q="Select * from mmem where adno="+a+";";
                    ResultSet rs=s.executeQuery(q);

                    while(rs.next()) {
                        int adno=rs.getInt("adno");
                        String name=rs.getString("name");
                        String ph=rs.getString("phnum");

                        String doj=rs.getString("doj");
                        String bg=rs.getString("bloodgroup");
                        String h=rs.getString("height");
                        String w=rs.getString("weight");
                        String bmi=rs.getString("BMI");
                        String hi=rs.getString("healthissue");
                        String t=rs.getString("type");
                        String p=rs.getString("package");
                        String ad=rs.getString("address");
                        Object[] ta={adno,name,ph,doj,bg,h,w,bmi,hi,t,p,ad};
                        m.addRow(ta);
                    }


                }catch(Exception e) {
                    JOptionPane.showMessageDialog(this,e.getMessage());
                }
            }

            else if(r2.isSelected()) {
                int a=Integer.parseInt(t1.getText());
                try{
                    Class.forName("java.sql.Driver");
                    Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/everyouth","root","Khrish2003");
                    Statement s=con.createStatement();
                    String q="Select * from fmem where adno="+a+";";
                    ResultSet rs=s.executeQuery(q);

                    while(rs.next()) {
                        int adno=rs.getInt("adno");
                        String name=rs.getString("name");
                        String ph=rs.getString("phnum");
                
                        String doj=rs.getString("doj");
                        String bg=rs.getString("bloodgroup");
                        String h=rs.getString("height");
                        String w=rs.getString("weight");
                        String bmi=rs.getString("BMI");
                        String hi=rs.getString("healthissue");
                        String t=rs.getString("type");
                        String p=rs.getString("package");
                        String ad=rs.getString("address");
                        Object[] ta={adno,name,ph,doj,bg,h,w,bmi,hi,t,p,ad};
                        m.addRow(ta);
                    }

                }catch(Exception e) {
                    JOptionPane.showMessageDialog(this,e.getMessage());
                }
            }
        } else{
            if(r1.isSelected()) {
                String a=t1.getText();
                String q;
                try{
                    Class.forName("java.sql.Driver");
                    Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/everyouth","root","Khrish2003");
                    Statement s=con.createStatement();
                    if(c.equals("CUSTOMER NAME")) {
                        q="Select * from mmem where trim(name) like '%"+a+"%';";
                        ResultSet rs=s.executeQuery(q);

                        while(rs.next()) {
                            int adno=rs.getInt("adno");
                            String name=rs.getString("name");
                            String ph=rs.getString("phnum");
                       
                            String doj=rs.getString("doj");
                            String bg=rs.getString("bloodgroup");
                            String h=rs.getString("height");
                            String w=rs.getString("weight");
                            String bmi=rs.getString("BMI");
                            String hi=rs.getString("healthissue");
                            String t=rs.getString("type");
                            String p=rs.getString("package");
                            String ad=rs.getString("address");
                            Object[] ta={adno,name,ph,doj,bg,h,w,bmi,hi,t,p,ad};
                            m.addRow(ta);
                        }
                    }
                    if(c.equals("PHONE NUMBER")) {
                        q="Select * from mmem where trim(phnum)='"+a+"';";
                        ResultSet rs=s.executeQuery(q);

                        while(rs.next()) {
                            int adno=rs.getInt("adno");
                            String name=rs.getString("name");
                            String ph=rs.getString("phnum");
                           
                            String doj=rs.getString("doj");
                            String bg=rs.getString("bloodgroup");
                            String h=rs.getString("height");
                            String w=rs.getString("weight");
                            String bmi=rs.getString("BMI");
                            String hi=rs.getString("healthissue");
                            String t=rs.getString("type");
                            String p=rs.getString("package");
                            String ad=rs.getString("address");
                            Object[] ta={adno,name,ph,doj,bg,h,w,bmi,hi,t,p,ad};
                            m.addRow(ta);
                        }
                    }
                  
                    if(c.equals("DATE OF JOINING")) {
                        q="Select * from mmem where trim(doj)='"+a+"';";
                        ResultSet rs=s.executeQuery(q);

                        while(rs.next()) {
                            int adno=rs.getInt("adno");
                            String name=rs.getString("name");
                            String ph=rs.getString("phnum");
                            
                            String doj=rs.getString("doj");
                            String bg=rs.getString("bloodgroup");
                            String h=rs.getString("height");
                            String w=rs.getString("weight");
                            String bmi=rs.getString("BMI");
                            String hi=rs.getString("healthissue");
                            String t=rs.getString("type");
                            String p=rs.getString("package");
                            String ad=rs.getString("address");
                            Object[] ta={adno,name,ph,doj,bg,h,w,bmi,hi,t,p,ad};
                            m.addRow(ta);
                        }
                    }
                    if(c.equals("ADDRESS")) {
                        q="Select * from mmem where trim(address)='"+a+"';";
                        ResultSet rs=s.executeQuery(q);

                        while(rs.next()) {
                            int adno=rs.getInt("adno");
                            String name=rs.getString("name");
                            String ph=rs.getString("phnum");
                            
                            String doj=rs.getString("doj");
                            String bg=rs.getString("bloodgroup");
                            String h=rs.getString("height");
                            String w=rs.getString("weight");
                            String bmi=rs.getString("BMI");
                            String hi=rs.getString("healthissue");
                            String t=rs.getString("type");
                            String p=rs.getString("package");
                            String ad=rs.getString("address");
                            Object[] ta={adno,name,ph,doj,bg,h,w,bmi,hi,t,p,ad};
                            m.addRow(ta);
                        }
                    }




                }catch(Exception e) {
                    JOptionPane.showMessageDialog(this,e.getMessage());
                }
            }

            if(r2.isSelected()) {
                String a=t1.getText();
                String q;
                try{
                    Class.forName("java.sql.Driver");
                    Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/everyouth","root","Khrish2003");
                    Statement s=con.createStatement();
                    if(c.equals("CUSTOMER NAME")) {
                        q="Select * from fmem where trim(name) like '%"+a+"%';";
                        ResultSet rs=s.executeQuery(q);

                        while(rs.next()) {
                            int adno=rs.getInt("adno");
                            String name=rs.getString("name");
                            String ph=rs.getString("phnum");
                           
                            String doj=rs.getString("doj");
                            String bg=rs.getString("bloodgroup");
                            String h=rs.getString("height");
                            String w=rs.getString("weight");
                            String bmi=rs.getString("BMI");
                            String hi=rs.getString("healthissue");
                            String t=rs.getString("type");
                            String p=rs.getString("package");
                            String ad=rs.getString("address");
                            Object[] ta={adno,name,ph,doj,bg,h,w,bmi,hi,t,p,ad};
                            m.addRow(ta);
                        }
                    }
                    if(c.equals("PHONE NUMBER")) {
                        q="Select * from fmem where trim(phnum)='"+a+"';";
                        ResultSet rs=s.executeQuery(q);

                        while(rs.next()) {
                            int adno=rs.getInt("adno");
                            String name=rs.getString("name");
                            String ph=rs.getString("phnum");
                           
                            String doj=rs.getString("doj");
                            String bg=rs.getString("bloodgroup");
                            String h=rs.getString("height");
                            String w=rs.getString("weight");
                            String bmi=rs.getString("BMI");
                            String hi=rs.getString("healthissue");
                            String t=rs.getString("type");
                            String p=rs.getString("package");
                            String ad=rs.getString("address");
                            Object[] ta={adno,name,ph,doj,bg,h,w,bmi,hi,t,p,ad};
                            m.addRow(ta);
                        }
                    }
                    if(c.equals("EMAIL ID")) {
                        q="Select * from fmem where trim(emailid)='"+a+"';";
                        ResultSet rs=s.executeQuery(q);

                        while(rs.next()) {
                            int adno=rs.getInt("adno");
                            String name=rs.getString("name");
                            String ph=rs.getString("phnum");
                            
                            String doj=rs.getString("doj");
                            String bg=rs.getString("bloodgroup");
                            String h=rs.getString("height");
                            String w=rs.getString("weight");
                            String bmi=rs.getString("BMI");
                            String hi=rs.getString("healthissue");
                            String t=rs.getString("type");
                            String p=rs.getString("package");
                            String ad=rs.getString("address");
                            Object[] ta={adno,name,ph,doj,bg,h,w,bmi,hi,t,p,ad};
                            m.addRow(ta);
                        }
                    }
                    if(c.equals("DATE OF JOINING")) {
                        q="Select * from fmem where trim(doj)='"+a+"';";
                        ResultSet rs=s.executeQuery(q);

                        while(rs.next()) {
                            int adno=rs.getInt("adno");
                            String name=rs.getString("name");
                            String ph=rs.getString("phnum");
                          
                            String doj=rs.getString("doj");
                            String bg=rs.getString("bloodgroup");
                            String h=rs.getString("height");
                            String w=rs.getString("weight");
                            String bmi=rs.getString("BMI");
                            String hi=rs.getString("healthissue");
                            String t=rs.getString("type");
                            String p=rs.getString("package");
                            String ad=rs.getString("address");
                            Object[] ta={adno,name,ph,doj,bg,h,w,bmi,hi,t,p,ad};
                            m.addRow(ta);
                        }
                    }
                    if(c.equals("ADDRESS")) {
                        q="Select * from fmem where trim(address)='"+a+"';";
                        ResultSet rs=s.executeQuery(q);

                        while(rs.next()) {
                            int adno=rs.getInt("adno");
                            String name=rs.getString("name");
                            String ph=rs.getString("phnum");
                           
                            String doj=rs.getString("doj");
                            String bg=rs.getString("bloodgroup");
                            String h=rs.getString("height");
                            String w=rs.getString("weight");
                            String bmi=rs.getString("BMI");
                            String hi=rs.getString("healthissue");
                            String t=rs.getString("type");
                            String p=rs.getString("package");
                            String ad=rs.getString("address");
                            Object[] ta={adno,name,ph,doj,bg,h,w,bmi,hi,t,p,ad};
                            m.addRow(ta);
                        }
                    }




                }catch(Exception e) {
                    JOptionPane.showMessageDialog(this,e.getMessage());
                }
            }
















        }// TODO add your handling code here:
}//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
        new homepage().setVisible(true);

        // TODO add your handling code here:
}//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        DefaultTableModel m=(DefaultTableModel)jt1.getModel();
        m.setRowCount(0);









        // TODO add your handling code here:
}//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
        try {
            jt1.print();
        } catch (PrinterException ex) {
            Logger.getLogger(searchcustomer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        try{
        exportTable(jt1, new File("Report1.xls"));
         JOptionPane.showMessageDialog(null, "Success!");
        }
        catch(IOException ex){
            System.out.println (ex.toString());
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new searchcustomer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cb1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jt1;
    private javax.swing.JRadioButton r1;
    private javax.swing.JRadioButton r2;
    private javax.swing.JTextField t1;
    // End of variables declaration//GEN-END:variables

}
